package tang.ming.qiao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TeacherExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public TeacherExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTNameIsNull() {
            addCriterion("t_name is null");
            return (Criteria) this;
        }

        public Criteria andTNameIsNotNull() {
            addCriterion("t_name is not null");
            return (Criteria) this;
        }

        public Criteria andTNameEqualTo(String value) {
            addCriterion("t_name =", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameNotEqualTo(String value) {
            addCriterion("t_name <>", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameGreaterThan(String value) {
            addCriterion("t_name >", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameGreaterThanOrEqualTo(String value) {
            addCriterion("t_name >=", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameLessThan(String value) {
            addCriterion("t_name <", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameLessThanOrEqualTo(String value) {
            addCriterion("t_name <=", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameLike(String value) {
            addCriterion("t_name like", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameNotLike(String value) {
            addCriterion("t_name not like", value, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameIn(List<String> values) {
            addCriterion("t_name in", values, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameNotIn(List<String> values) {
            addCriterion("t_name not in", values, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameBetween(String value1, String value2) {
            addCriterion("t_name between", value1, value2, "tName");
            return (Criteria) this;
        }

        public Criteria andTNameNotBetween(String value1, String value2) {
            addCriterion("t_name not between", value1, value2, "tName");
            return (Criteria) this;
        }

        public Criteria andSchoolIsNull() {
            addCriterion("school is null");
            return (Criteria) this;
        }

        public Criteria andSchoolIsNotNull() {
            addCriterion("school is not null");
            return (Criteria) this;
        }

        public Criteria andSchoolEqualTo(String value) {
            addCriterion("school =", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotEqualTo(String value) {
            addCriterion("school <>", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolGreaterThan(String value) {
            addCriterion("school >", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolGreaterThanOrEqualTo(String value) {
            addCriterion("school >=", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolLessThan(String value) {
            addCriterion("school <", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolLessThanOrEqualTo(String value) {
            addCriterion("school <=", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolLike(String value) {
            addCriterion("school like", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotLike(String value) {
            addCriterion("school not like", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolIn(List<String> values) {
            addCriterion("school in", values, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotIn(List<String> values) {
            addCriterion("school not in", values, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolBetween(String value1, String value2) {
            addCriterion("school between", value1, value2, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotBetween(String value1, String value2) {
            addCriterion("school not between", value1, value2, "school");
            return (Criteria) this;
        }

        public Criteria andCourseIsNull() {
            addCriterion("course is null");
            return (Criteria) this;
        }

        public Criteria andCourseIsNotNull() {
            addCriterion("course is not null");
            return (Criteria) this;
        }

        public Criteria andCourseEqualTo(String value) {
            addCriterion("course =", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseNotEqualTo(String value) {
            addCriterion("course <>", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseGreaterThan(String value) {
            addCriterion("course >", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseGreaterThanOrEqualTo(String value) {
            addCriterion("course >=", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseLessThan(String value) {
            addCriterion("course <", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseLessThanOrEqualTo(String value) {
            addCriterion("course <=", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseLike(String value) {
            addCriterion("course like", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseNotLike(String value) {
            addCriterion("course not like", value, "course");
            return (Criteria) this;
        }

        public Criteria andCourseIn(List<String> values) {
            addCriterion("course in", values, "course");
            return (Criteria) this;
        }

        public Criteria andCourseNotIn(List<String> values) {
            addCriterion("course not in", values, "course");
            return (Criteria) this;
        }

        public Criteria andCourseBetween(String value1, String value2) {
            addCriterion("course between", value1, value2, "course");
            return (Criteria) this;
        }

        public Criteria andCourseNotBetween(String value1, String value2) {
            addCriterion("course not between", value1, value2, "course");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andTechDateIsNull() {
            addCriterion("tech_date is null");
            return (Criteria) this;
        }

        public Criteria andTechDateIsNotNull() {
            addCriterion("tech_date is not null");
            return (Criteria) this;
        }

        public Criteria andTechDateEqualTo(Date value) {
            addCriterionForJDBCDate("tech_date =", value, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("tech_date <>", value, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateGreaterThan(Date value) {
            addCriterionForJDBCDate("tech_date >", value, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tech_date >=", value, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateLessThan(Date value) {
            addCriterionForJDBCDate("tech_date <", value, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tech_date <=", value, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateIn(List<Date> values) {
            addCriterionForJDBCDate("tech_date in", values, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("tech_date not in", values, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tech_date between", value1, value2, "techDate");
            return (Criteria) this;
        }

        public Criteria andTechDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tech_date not between", value1, value2, "techDate");
            return (Criteria) this;
        }

        public Criteria andBigIconIsNull() {
            addCriterion("big_icon is null");
            return (Criteria) this;
        }

        public Criteria andBigIconIsNotNull() {
            addCriterion("big_icon is not null");
            return (Criteria) this;
        }

        public Criteria andBigIconEqualTo(String value) {
            addCriterion("big_icon =", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconNotEqualTo(String value) {
            addCriterion("big_icon <>", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconGreaterThan(String value) {
            addCriterion("big_icon >", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconGreaterThanOrEqualTo(String value) {
            addCriterion("big_icon >=", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconLessThan(String value) {
            addCriterion("big_icon <", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconLessThanOrEqualTo(String value) {
            addCriterion("big_icon <=", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconLike(String value) {
            addCriterion("big_icon like", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconNotLike(String value) {
            addCriterion("big_icon not like", value, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconIn(List<String> values) {
            addCriterion("big_icon in", values, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconNotIn(List<String> values) {
            addCriterion("big_icon not in", values, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconBetween(String value1, String value2) {
            addCriterion("big_icon between", value1, value2, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andBigIconNotBetween(String value1, String value2) {
            addCriterion("big_icon not between", value1, value2, "bigIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconIsNull() {
            addCriterion("mid_icon is null");
            return (Criteria) this;
        }

        public Criteria andMidIconIsNotNull() {
            addCriterion("mid_icon is not null");
            return (Criteria) this;
        }

        public Criteria andMidIconEqualTo(String value) {
            addCriterion("mid_icon =", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconNotEqualTo(String value) {
            addCriterion("mid_icon <>", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconGreaterThan(String value) {
            addCriterion("mid_icon >", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconGreaterThanOrEqualTo(String value) {
            addCriterion("mid_icon >=", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconLessThan(String value) {
            addCriterion("mid_icon <", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconLessThanOrEqualTo(String value) {
            addCriterion("mid_icon <=", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconLike(String value) {
            addCriterion("mid_icon like", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconNotLike(String value) {
            addCriterion("mid_icon not like", value, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconIn(List<String> values) {
            addCriterion("mid_icon in", values, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconNotIn(List<String> values) {
            addCriterion("mid_icon not in", values, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconBetween(String value1, String value2) {
            addCriterion("mid_icon between", value1, value2, "midIcon");
            return (Criteria) this;
        }

        public Criteria andMidIconNotBetween(String value1, String value2) {
            addCriterion("mid_icon not between", value1, value2, "midIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconIsNull() {
            addCriterion("small_icon is null");
            return (Criteria) this;
        }

        public Criteria andSmallIconIsNotNull() {
            addCriterion("small_icon is not null");
            return (Criteria) this;
        }

        public Criteria andSmallIconEqualTo(String value) {
            addCriterion("small_icon =", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconNotEqualTo(String value) {
            addCriterion("small_icon <>", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconGreaterThan(String value) {
            addCriterion("small_icon >", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconGreaterThanOrEqualTo(String value) {
            addCriterion("small_icon >=", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconLessThan(String value) {
            addCriterion("small_icon <", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconLessThanOrEqualTo(String value) {
            addCriterion("small_icon <=", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconLike(String value) {
            addCriterion("small_icon like", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconNotLike(String value) {
            addCriterion("small_icon not like", value, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconIn(List<String> values) {
            addCriterion("small_icon in", values, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconNotIn(List<String> values) {
            addCriterion("small_icon not in", values, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconBetween(String value1, String value2) {
            addCriterion("small_icon between", value1, value2, "smallIcon");
            return (Criteria) this;
        }

        public Criteria andSmallIconNotBetween(String value1, String value2) {
            addCriterion("small_icon not between", value1, value2, "smallIcon");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table teacher
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}